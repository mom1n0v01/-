import hashlib
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7849789306:AAHE4tGKrSCOcziCQLZOIkM_TTVcAPmSMaQ"
PASSWORD = "1234"
OWNER_ID = 123456789  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram user ID

# === –°–û–°–¢–û–Ø–ù–ò–Ø ===
authorized_users = set()
password_attempts = {}

# === –ö–ù–û–ü–ö–ò ===
main_keyboard = ReplyKeyboardMarkup(
    [["/start", "–í–≤–µ—Å—Ç–∏ —Ö—ç—à"]],
    resize_keyboard=True
)

# === /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id

    if user_id != OWNER_ID:
        await update.message.reply_text("‚õî –≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –¥–ª—è —Ç–µ–±—è.")
        return

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø.",
        reply_markup=main_keyboard
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤ ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text.strip()

    if user_id != OWNER_ID:
        await update.message.reply_text("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
        return

    if user_id not in authorized_users:
        password_attempts[user_id] = password_attempts.get(user_id, 0) + 1
        if text == PASSWORD:
            authorized_users.add(user_id)
            await update.message.reply_text("‚úÖ –ü–∞—Ä–æ–ª—å –ø—Ä–∏–Ω—è—Ç. –û—Ç–ø—Ä–∞–≤—å —Ö—ç—à.")
        else:
            if password_attempts[user_id] >= 3:
                await update.message.reply_text("‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç.")
            else:
                await update.message.reply_text("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë.")
        return

    # –†–∞—Å—á—ë—Ç X –∏–∑ —Ö—ç—à–∞
    hash_bytes = hashlib.sha256(text.encode()).digest()
    num = int.from_bytes(hash_bytes, 'big')
    position = (num % 10) + 1

    await update.message.reply_text(f"üéØ X = {position}")

    # –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
    print(f"[{user_id}] –•—ç—à: {text} ‚Üí X = {position}")

# === –ó–∞–ø—É—Å–∫ ===
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    main()
